plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.0"
	id "jacoco"
}

group = 'com.fertigApp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR8")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.1'
	testImplementation 'io.projectreactor:reactor-test'
	implementation 'com.google.firebase:firebase-admin:7.0.1'
	compile 'com.google.api-client:google-api-client:1.30.10'
	compile "org.springframework.boot:spring-boot-configuration-processor"
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'
	compile group: 'org.springframework.social', name: 'spring-social-facebook', version: '2.0.3.RELEASE'
	testImplementation 'com.h2database:h2'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
    useJUnitPlatform()
}
sonarqube {
  properties {
    property "sonar.projectKey", "FertigApp_BackEnd"
    property "sonar.organization", "fertigapp"
    property "sonar.host.url", "https://sonarcloud.io"
	property "sonar.binaries", "build/classes"
	property "sonar.sources", "src/main"
	property "sonar.tests", "src/test"
	property "sonar.java.coveragePlugin", "jacoco"
	property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test"
  }
}

plugins.withType(JacocoPlugin) {
	tasks["test"].finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
